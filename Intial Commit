@@ -0,0 +1,2 @@
bin/
.classpath
 17  .project 
@@ -0,0 +1,17 @@
<?xml version="1.0" encoding="UTF-8"?>
<projectDescription>
	<name>CruxOnlineFeb18</name>
	<comment></comment>
	<projects>
	</projects>
	<buildSpec>
		<buildCommand>
			<name>org.eclipse.jdt.core.javabuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
	</buildSpec>
	<natures>
		<nature>org.eclipse.jdt.core.javanature</nature>
	</natures>
</projectDescription>
 11  .settings/org.eclipse.jdt.core.prefs 
@@ -0,0 +1,11 @@
eclipse.preferences.version=1
org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
org.eclipse.jdt.core.compiler.compliance=1.8
org.eclipse.jdt.core.compiler.debug.lineNumber=generate
org.eclipse.jdt.core.compiler.debug.localVariable=generate
org.eclipse.jdt.core.compiler.debug.sourceFile=generate
org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
org.eclipse.jdt.core.compiler.source=1.8
 110  src/Lecture2/DataTypesDemo.java 
@@ -0,0 +1,110 @@
package Lecture2;

public class DataTypesDemo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// Part 1
		byte b = 10;
		short sh = 20;
		int in = 30;
		long ln = 40;

		// b=sh;
		// b=in;
		// b=ln;

		sh = b;
		// sh=in;
		// sh=ln;

		in = b;
		in = sh;
		// in=ln;

		ln = b;
		ln = sh;
		ln = in;

		// Part 2
		b = 10;
		b = 127;
		b = (byte) 128;
		System.out.println(b);

		// Part 3
		in = 1000000000;
		// in=10000000000;
		ln = 10000000000L;
		System.out.println(ln);

		// Part 4
		sh = 32000;

		// Part 5
		// float f=5.5;
		float f = 5.5f;
		System.out.println(f);

		double db = 6.5;

		// Part 6
		in = (int) f;
		System.out.println(in);

		f = in;
		System.out.println(f);

		// Part 7
		boolean bit = true;
		// bit=1;
		// bit=0;
		if (bit) {
			System.out.println("Hello");
		} else {
			System.out.println("Bye");
		}

		bit = false;
		if (bit) {
			System.out.println("Hello");
		} else {
			System.out.println("Bye");
		}

		if (in > 0) {
			System.out.println("Greater");
		} else {
			System.out.println("Lesser Or Equal");
		}

		// if(1){
		//
		// }

		// Part 8
		char ch = 'a';
		ch = 99;
		System.out.println(ch);

		// ch=64000;
		// System.out.println(ch);
		ch = (char) (ch + 2);
		System.out.println(ch);

		in = ch;
		System.out.println(in);

		// ch=68000;
		ch = (char) 68000;
		System.out.println(ch);

		// Part 9
		System.out.println(10 + 20 + "Hello" + 10 + 20);
		System.out.println(2 + ' ' + 5);
		System.out.println(2 + " " + 5);
		System.out.println("Hello" + '\t' + "World");
		System.out.println("Hello" + "\t" + "World");
	}

}
 18  src/Lecture2/FtoC.java 
@@ -0,0 +1,18 @@
package Lecture2;

public class FtoC {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int fmin = 0;
		int fmax = 300;
		int fstep = 20;
		int fcurrent = fmin;
		while (fcurrent <= fmax) {
			int celsius = (int) ((5.0 / 9) * (fcurrent - 32));
			System.out.println(fcurrent + "\t" + celsius);
			fcurrent = fcurrent + fstep;
		}
	}

}
 23  src/Lecture2/UpperOrLowerCase.java 
@@ -0,0 +1,23 @@
package Lecture2;

import java.util.Scanner;

public class UpperOrLowerCase {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner s = new Scanner(System.in);
		char ch=s.next().charAt(0);
	//	System.out.println(ch);

		if(ch>='a'&&ch<='z'){
			System.out.println("LowerCase");
		}else if(ch>='A'&&ch<='Z'){
			System.out.println("Uppercase");
		}else{
			System.out.println("Invalid Character");
		}

	}

}
